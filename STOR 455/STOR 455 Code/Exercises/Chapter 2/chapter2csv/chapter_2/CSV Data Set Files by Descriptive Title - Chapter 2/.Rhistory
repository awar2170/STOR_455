plot(I(Annuli^2)~Mass, data = turtles)
abline(lm(I(Annuli^2)~Mass, data = turtles))
summary(lm(I(Annuli^2)~Mass, data = turtles))
# Division Annuli
plot(lm(1/(Annuli)~(Mass), data=turtles))
abline(lm(1/(Annuli)~(Mass), data=turtles))
summary(lm(1/(Annuli)~(Mass), data=turtles))
# Division Mass
plot(lm((Annuli)~1/(Mass), data=turtles))
abline(lm((Annuli)~1/(Mass), data=turtles))
summary(lm((Annuli)~1/(Mass), data=turtles))
summary(lm(Annuli~Mass, data = turtles))
summary(lm(Annuli~sqrt(Mass), data = turtles))
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
summary(lm(Annuli~Mass, data = turtles))
# Has an R-squared of 0.23
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
summary(lm(Annuli~sqrt(Mass), data = turtles))
# Has an R-squared of 0.25
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
summary(lm(sqrt(Annuli)~Mass, data = turtles))
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
summary(lm(Annuli~log(Mass), data = turtles))
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
summary(lm(log(Annuli)~Mass, data = turtles))
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
summary(lm(Annuli~I(Mass^2), data = turtles))
# Add Exponent to Annuli
plot(I(Annuli^2)~Mass, data = turtles)
abline(lm(I(Annuli^2)~Mass, data = turtles))
summary(lm(I(Annuli^2)~Mass, data = turtles))
# Division Annuli
plot(lm(1/(Annuli)~(Mass), data=turtles))
abline(lm(1/(Annuli)~(Mass), data=turtles))
summary(lm(1/(Annuli)~(Mass), data=turtles))
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
summary(lm(Annuli~Mass, data = turtles))
# Has an R-squared of 0.23
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
summary(lm(Annuli~sqrt(Mass), data = turtles))
# Has an R-squared of 0.25
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
summary(lm(sqrt(Annuli)~Mass, data = turtles))
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
summary(lm(Annuli~log(Mass), data = turtles))
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
summary(lm(log(Annuli)~Mass, data = turtles))
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
summary(lm(Annuli~I(Mass^2), data = turtles))
# Add Exponent to Annuli
plot(I(Annuli^2)~Mass, data = turtles)
abline(lm(I(Annuli^2)~Mass, data = turtles))
summary(lm(I(Annuli^2)~Mass, data = turtles))
# Division Annuli
plot(lm(1/(Annuli)~(Mass), data=turtles))
abline(lm(1/(Annuli)~(Mass), data=turtles))
summary(lm(1/(Annuli)~(Mass), data=turtles))
# Division Annuli
plot(lm(1/(Annuli)~(Mass), data=turtles))
summary(lm(1/(Annuli)~(Mass), data=turtles))
# Division Annuli
plot(lm(1/(Annuli)~(Mass), data=turtles))
# Division Annuli
plot(lm((1/(Annuli))~(Mass), data=turtles))
# Division Annuli
plot(lm(1/(Annuli)~Mass, data=turtles))
# Division Annuli
note <- lm(1/(Annuli)~Mass, data=turtles)
summary(note)
plot(note)
B0 = summary(lm(1/(Annuli)~(Mass), data=turtles))$coefficients[1,1]
B1 = summary(lm(1/(Annuli)~(Mass), data=turtles))$coefficients[2,1]
plot(Annuli~Mass, data = turtles)
curve(1/(B0+B1*x), add=TRUE)
B0 = summary(lm(1/(Annuli)~(Mass), data=turtles))$coefficients[1,1]
B1 = summary(lm(1/(Annuli)~(Mass), data=turtles))$coefficients[2,1]
plot(Annuli~Mass, data = turtles)
curve(1/(B0+B1*x), add=TRUE)
plot(note)
plot(lm(1/(Annuli)~Mass, data=turtles))
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
summary(lm(Annuli~Mass, data = turtles))
# Has an R-squared of 0.23
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
summary(lm(Annuli~sqrt(Mass), data = turtles))
# Has an R-squared of 0.25
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
summary(lm(sqrt(Annuli)~Mass, data = turtles))
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
summary(lm(Annuli~log(Mass), data = turtles))
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
summary(lm(log(Annuli)~Mass, data = turtles))
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
summary(lm(Annuli~I(Mass^2), data = turtles))
# Add Exponent to Annuli
plot(I(Annuli^2)~Mass, data = turtles)
abline(lm(I(Annuli^2)~Mass, data = turtles))
summary(lm(I(Annuli^2)~Mass, data = turtles))
# Division Annuli
plot(lm(1/(Annuli)~Mass, data=turtles))
abline(lm(1/(Annuli)~Mass, data=turtles))
summary(lm(1/(Annuli)~Mass, data=turtles))
plot(Annuli~Mass, data = turtles) # This is the original
plot(Annuli~Mass, data = turtles, 1:2) # This is the original
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
summary(lm(Annuli~Mass, data = turtles))
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
summary(lm(Annuli~sqrt(Mass), data = turtles))
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
summary(lm(sqrt(Annuli)~Mass, data = turtles))
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
summary(lm(Annuli~log(Mass), data = turtles))
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
summary(lm(log(Annuli)~Mass, data = turtles))
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
summary(lm(Annuli~I(Mass^2), data = turtles))
# Add Exponent to Annuli
plot(I(Annuli^2)~Mass, data = turtles)
abline(lm(I(Annuli^2)~Mass, data = turtles))
summary(lm(I(Annuli^2)~Mass, data = turtles))
# Division Annuli
plot(lm(1/(Annuli)~Mass, data=turtles))
abline(lm(1/(Annuli)~Mass, data=turtles))
summary(lm(1/(Annuli)~Mass, data=turtles))
summary(lm(Annuli~Mass, data = turtles))
plot(Annuli~Mass, data = turtles) # This is the original
plot(mod1, 1:2)
plot(lm(Annuli~Mass, data = turtles)) # This is the original
plot(Annuli~Mass, data = turtles) # This is the original
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
summary(lm(Annuli~Mass, data = turtles))
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
summary(lm(Annuli~sqrt(Mass), data = turtles))
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
summary(lm(sqrt(Annuli)~Mass, data = turtles))
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
summary(lm(Annuli~log(Mass), data = turtles))
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
summary(lm(log(Annuli)~Mass, data = turtles))
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
summary(lm(Annuli~I(Mass^2), data = turtles))
# Add Exponent to Annuli
plot(I(Annuli^2)~Mass, data = turtles)
abline(lm(I(Annuli^2)~Mass, data = turtles))
summary(lm(I(Annuli^2)~Mass, data = turtles))
# Division Annuli
plot(lm(1/(Annuli)~Mass, data=turtles))
abline(lm(1/(Annuli)~Mass, data=turtles))
summary(lm(1/(Annuli)~Mass, data=turtles))
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
plot(lm(Annuli~Mass, data = turtles))
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
plot(lm(Annuli~sqrt(Mass), data = turtles))
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
plot(lm(sqrt(Annuli)~Mass, data = turtles))
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
plot(lm(Annuli~log(Mass), data = turtles))
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
plot(lm(log(Annuli)~Mass, data = turtles))
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
plot(lm(Annuli~I(Mass^2), data = turtles))
# Add Exponent to Annuli
plot(I(Annuli^2)~Mass, data = turtles)
abline(lm(I(Annuli^2)~Mass, data = turtles))
plot(lm(I(Annuli^2)~Mass, data = turtles))
plot(lm(I(Annuli^2)~Mass, data = turtles))
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
plot(lm(Annuli~Mass, data = turtles))
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
plot(lm(Annuli~sqrt(Mass), data = turtles))
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
plot(lm(sqrt(Annuli)~Mass, data = turtles))
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
plot(lm(Annuli~log(Mass), data = turtles))
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
plot(lm(log(Annuli)~Mass, data = turtles))
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
plot(lm(Annuli~I(Mass^2), data = turtles))
# Division Annuli
plot(lm(1/(Annuli)~Mass, data=turtles))
abline(lm(1/(Annuli)~Mass, data=turtles))
plot(lm(1/(Annuli)~Mass, data=turtles))
plot(lm(Annuli~Mass, data = turtles), 1:2)
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
plot(lm(Annuli~Mass, data = turtles), 1:2)
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
plot(lm(Annuli~sqrt(Mass), data = turtles), 1:2)
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
plot(lm(sqrt(Annuli)~Mass, data = turtles), 1:2)
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
plot(lm(Annuli~log(Mass), data = turtles), 1:2)
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
plot(lm(log(Annuli)~Mass, data = turtles), 1:2)
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
plot(lm(Annuli~I(Mass^2), data = turtles), 1:2)
# Division Annuli
plot(lm(1/(Annuli)~Mass, data=turtles))
abline(lm(1/(Annuli)~Mass, data=turtles))
plot(lm(1/(Annuli)~Mass, data=turtles), 1:2)
rm(list=ls())
turtles <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/Turtles.csv
") # Calling in the data
plot(Annuli~Mass, data = turtles) # Checking to see if the data looks linear, or if there are any patterns.
# The data fans out a little as mass increases, the annuli variability increases. It is not consistent.
mod1 <- lm(Annuli~Mass, turtles)
mod1
abline(mod1)
plot(Annuli~Mass, data = turtles)
abline(mod1)
plot(mod1, 1:2) # This is for me to see what other plots look like
# Linear Regression Line Formula: y = mx + b; y = 0.02957x + 8.08494
mass <- 325
yhat1 <- 0.02957*mass + 8.08494
# Based on our model, this turtle should have 18 annuli.
# Actual:
y1 <- turtles[9, "Annuli"]
# The turtle's true # of annuli is 18.
residual1 <- yhat1-y1
residual1
turtles[9,]
mod1 <- lm(Annuli~Mass, turtles)
turtles$residual <- mod1$residuals
max(turtles$residual)
x <- which.max(turtles$residual)
turtles[x,]
mod1 <- lm(Annuli~Mass, turtles)
turtles$residual <- mod1$residuals
min(turtles$residual)
y <- which.min(turtles$residual)
turtles[y,]
plot(Annuli~Mass, data = turtles)
abline(mod1)
plot(mod1, 1:2)
plot(Annuli~Mass, data = turtles) # This is the original
abline(lm(Annuli~Mass, data = turtles))
plot(lm(Annuli~Mass, data = turtles), 1:2)
# square root Mass
plot(Annuli~sqrt(Mass), data = turtles)
abline(lm(Annuli~sqrt(Mass), data = turtles))
plot(lm(Annuli~sqrt(Mass), data = turtles), 1:2)
# Square root Annuli
plot(sqrt(Annuli)~Mass, data = turtles)
abline(lm(sqrt(Annuli)~Mass, data = turtles))
plot(lm(sqrt(Annuli)~Mass, data = turtles), 1:2)
# Log Mass
plot(Annuli~log(Mass), data = turtles)
abline(lm(Annuli~log(Mass), data = turtles))
plot(lm(Annuli~log(Mass), data = turtles), 1:2)
# Log Annuli
plot(log(Annuli)~Mass, data = turtles)
abline(lm(log(Annuli)~Mass, data = turtles))
plot(lm(log(Annuli)~Mass, data = turtles), 1:2)
# Add Exponent to Mass
plot(Annuli~I(Mass^2), data = turtles)
abline(lm(Annuli~I(Mass^2), data = turtles))
plot(lm(Annuli~I(Mass^2), data = turtles), 1:2)
# Division Annuli
plot(lm(1/(Annuli)~Mass, data=turtles))
abline(lm(1/(Annuli)~Mass, data=turtles))
plot(lm(1/(Annuli)~Mass, data=turtles), 1:2)
B0 = summary(lm(1/(Annuli)~(Mass), data=turtles))$coefficients[1,1]
B1 = summary(lm(1/(Annuli)~(Mass), data=turtles))$coefficients[2,1]
plot(Annuli~Mass, data = turtles)
curve(1/(B0+B1*x), add=TRUE)
B1*mass+B0
B0 = summary(lm(1/(Annuli)~(Mass), data=turtles))$coefficients[1,1] # Intercept
B1 = summary(lm(1/(Annuli)~(Mass), data=turtles))$coefficients[2,1] # Slope
B1*mass+B0
summary(mod1)
1/(B0+B1*mass)
B1*mass+B0
turtleprediction <- 1/(B0+B1*mass)
predicted <- 1/(B0+B1*mass)
turtles[9,]
turtles$Annuli[9,]
turtles[9,]
turtles$Annuli[9]
predicted - turtles$Annuli[9]
turtles <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/Turtles.csv
") # Calling in the data
plot(Annuli~Mass, data = turtles) # Checking to see if the data looks linear, or if there are any patterns.
# The data fans out a little as mass increases, the annuli variability increases. It is not consistent.
mod1 <- lm(Annuli~Mass, turtles)
mod1
abline(mod1)
plot(Annuli~Mass, data = turtles)
abline(mod1)
plot(mod1, 1:2) # This is for me to see what other plots look like
# Linear Regression Line Formula: y = mx + b; y = 0.02957x + 8.08494
mass <- 325
yhat1 <- 0.02957*mass + 8.08494 #This is mod1's regression line
# Based on our model, this turtle should have 18 annuli.
# Actual:
y1 <- turtles[9, "Annuli"]
# The turtle's true # of annuli is 18.
residual1 <- yhat1-y1
residual1
turtles[9,]
mod1 <- lm(Annuli~Mass, turtles)
turtles$residual <- mod1$residuals
max(turtles$residual)
x <- which.max(turtles$residual)
turtles[x,]
names(turtle$sex)
names(turtles$Sex)
categories(turtles$Sex)
type(turtles$Sex)
typeis(turtles$Sex)
istype(turtles$Sex)
females <- subset(turtles$sex = females)
males <- subset(turtles$sex == males)
females <- subset(turtles$sex == females)
head(turtles)
males <- subset(turtles$sex == "Males")
females <- subset(turtles$sex == "Females")
males <- subset(turtles$sex = "Males")
females <- subset(turtles$sex = "Females")
setwd("C:/Users/adeve/Desktop")
pros.dat =
as.matrix(read.table("C:/Users/adeve/Desktop/pros.dat"))
nrow(pros.dat)
ncol(pros.dat)
pros.dat[1:6,]
pros.dat[91:97,]
head(pros.dat)
tail(pros.dat)
rownames(pros.dat) # No names assigned
colnames(pros.dat) # yes, names assigned
# There is no log cancer weight in teh dataset, so I am using log prostate weight instead
# Note: log cancer volume = lcavol
# Note: log cancer weight = lweight
pros.dat.sub <- pros.dat[,c("lcavol", "lweight")]
head(pros.dat.sub[1:6,])
# Yes, R automatically assigned column names to the pros.dat.sub columns
logdense1 <- pros.dat.sub[,2]/pros.dat.sub[,1]
logdense2 <- pros.dat.sub[,"lweight"]/pros.dat.sub[,"lcavol"]
all.equal(logdense1, logdense2)
ldense <- logdense1
pros.dat <- cbind(pros.dat, ldense)
head(pros.dat)
hist(pros.dat[,"lcavol"], breaks = 20) # Appears roughly normally distributed
hist(pros.dat[,"lweight"],  breaks = 20) # Appears roughly normal, some left skew
plot(pros.dat[,"lcavol"]~pros.dat[,"lweight"], pros.dat)
# No distinct pattern or relationship can be seen from scatterplot
plot(pros.dat[,"lcavol"]~pros.dat[,"age"], pros.dat)
plot(pros.dat[,"lweight"]~pros.dat[,"age"], pros.dat)
hist(pros.dat[,"ldense"])
plot(pros.dat[,"ldense"]~pros.dat[,"age"], pros.dat)
pros.dat <- pros.dat[,-10]
head(pros.dat)
has.svi <- pros.dat[,"svi"] > 0
pros.dat <- cbind(pros.dat, has.svi)
head(pros.dat) # This is for me to check that it did it correctly
sum( pros.dat[,"has.svi"])
# 21 patients have SVI
pros.dat.svi <- pros.dat[which(pros.dat[,"svi"] == "1"),]
pros.dat.no.svi <- pros.dat[which(pros.dat[,"svi"] == "0"),]
pros.dat.svi.avg <- apply(pros.dat.svi, 2, mean)
pros.dat.no.svi.avg <- apply(pros.dat.no.svi, 2, mean)
head(pros.dat.svi.avg)
head(pros.dat.no.svi.avg)
magic.denom = c(0.19092077, 0.08803179, 1.91148819, 0.34076326, 0.00000000,
0.25730390, 0.15441770, 6.30903678, 0.23021447)
pros.dat.avg <- rbind(pros.dat.svi.avg, pros.dat.no.svi.avg)
pros.dat.avg
pros.dat.t.stat <- apply(pros.dat.avg, 1, function(x) x/magic.denom)
pros.dat.t.stat
i = 1
var.name = pros.dat[,i]
title = paste("Histogram of", var.name)
hist(pros.dat[,i], breaks = 20, main= title, xlab=var.name)
for(col in 1:ncol(pros.dat)) {
hist(pros.dat[,col])
}
plot(pros.dat[,"lcavol"]~pros.dat[,"svi"])
plot(pros.dat[,"lcavol"]~as.factor(pros.dat[,"svi"]))
i = 1
var.name2 = pros.dat[,i]
title2 = paste(var.name, "versus SVI")
hist(pros.dat[,i], breaks = 20, main= title2, xlab="SVI", ylab = var.name)
i = 1
var.name2 = pros.dat[,i]
title2 = paste(var.name, "versus SVI")
plot(pros.dat[,i]~as.factor(pros.dat[,"svi"]))
for(i in i:ncol(pros.dat)) {
plot(pros.dat[,i]~as.factor(pros.dat[,"svi"]))
}
pros.dat.actual <- pros.dat[,c(-5)]
pros.dat.actual
i = 1
var.name2 = pros.dat[,i]
title2 = paste(var.name, "versus SVI")
plot(pros.dat[,i]~as.factor(pros.dat[,"svi"]))
for(i in i:ncol(pros.dat)) {
plot(pros.dat[,i]~as.factor(pros.dat[,"svi"]))
}
library(Stat2Data)
library("Stat2Data")
rm(list = ls())
setwd("C:/Users/adeve/Desktop/Chapel Hill/Fall21/STOR 455/STOR 455 Code/Exercises/Chapter 2/chapter2csv/chapter_2/CSV Data Set Files by Descriptive Title - Chapter 2")
cearal <- read.csv("Cereal")
cearal <- read.csv("Cereal.csv")
cereal <- read.csv("Cereal.csv")
rm(list = ls())
setwd("C:/Users/adeve/Desktop/Chapel Hill/Fall21/STOR 455/STOR 455 Code/Exercises/Chapter 2/chapter2csv/chapter_2/CSV Data Set Files by Descriptive Title - Chapter 2")
cereal <- read.csv("Cereal.csv")
# Trying to predict calories using the sugar context; sugar = x, calories = y
names(Cereal)
# Trying to predict calories using the sugar context; sugar = x, calories = y
names(cereal)
mod1 <- lm(Calories~Sugar, cereal)
confit(mod1, level=0.95)
confint(mod1, level=0.95)
mod1
summary(mod1)
# THe slope is 2.4808.  This means for every additional gram of sugar added, we can expect the calories to increase by 2.4 calories.
confint(mod1, level=0.95)
####17abcd####
# Tehre are 2 types of Dementia: Lewy Bodies and ALzheimer's.
dement <- read.csv("LewyDLBad.csv")
names(dement)
head(dement)
mod2 <- lm(MMSE~APC, dement)
summary(mod2)
