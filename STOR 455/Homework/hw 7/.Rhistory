resume.names <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.names <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
library(Stat2Data)
library(readr)
library(TTR)
unique(resume.names$ethnicity)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
library(Stat2Data)
library(readr)
library(TTR)
employ.mod = glm(call~factor(ethnicity)+equal+factor(ethnicity)*equal, data=resume, family=binomial)
employ.mod
anova(employ.mod, test = "Chisq")
summary(employ.mod)
summary(employ.mod)
-2.64903+0.38163-0.09106+0.19372
newdata <- data.frame(factor(ethnicity)=1)
newdata <- data.frame(factor(ethnicity)==1)
newdata <- data.frame(factor(ethnicity)==1, resume)
summary(employ.mod)
employ.mod2 <- glm.fit(call~factor(ethnicity)+equal+factor(ethnicity)*equal, data=resume, family=binomial)
install.packages("ISLR")
library(ISLR)
employ.mod2 <- glm.fit(call~factor(ethnicity)+equal+factor(ethnicity)*equal, data=resume, family=binomial)
library(Amelia)
install.packages("Amelia")
library(Amelia)
employ.mod2 <- glm.fit(call~factor(ethnicity)+equal+factor(ethnicity)*equal, data=resume, family=binomial)
install.packages("mlbench")
library(mlbench)
employ.mod2 <- glm.fit(call~factor(ethnicity)+equal+factor(ethnicity)*equal, data=resume, family=binomial)
install.packages("bestglm")
library(bestglm)
library(leaps)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
library(Stat2Data)
library(readr)
library(TTR)
library(bestglm)
library(leaps)
head(resume)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.2 <- resume[,c(1:4,6:7,5)]
head(resume.2)
bestglm(resume.2, family=binomial())
bestglm(resume.2, family=binomial)
head(resume.2)
names(resume.2)
class(names(resume.2))
names(resume.2)
class(resume.2$name)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.2 <- resume[,c(1:4,6:7,5)]
head(resume.2)
bestglm(resume.2, family=binomial)
factor(resume.2)
head(resume.2)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.2 <- resume[,c(1:4,6:7,5)]
head(resume.2)
factor(resume.2)
head(resume.2)
bestglm(resume.2, family=binomial)
head(resume.2)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.2 = within(resume, {name = NULL})
resume.2 <- resume[,c(1:4,6:7,5)]
head(resume.2)
bestglm(resume.2, family=binomial)
head(resume.2)
resume.2 = within(resume, {name = NULL})
head(resume.2)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.2 = within(resume, {name = NULL})
head(resume.2)
resume.2 <- resume.2[,c(1:3,5:6,4)]
head(resume.2)
bestglm(resume.2, family=binomial)
resume.2 <- as.factor(resume.2)
head(resume.2)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.2 = within(resume, {name = NULL})
head(resume.2)
resume.2 <- resume.2[,c(1:3,5:6,4)]
head(resume.2)
bestglm(resume.2, family=binomial)
head(resume.2)
bestglm(resume.2, family=binomial)
head(resume.2)
resume.2 <- as.factor(resume.2$sex, resume.2$ethnicity, resume.2$quality, resume.2$equal)
resume.2 <- as.factor(resume.2$sex)
head(resume.2)
resume.2 <- levels(resume.2$sex, resume.2$ethnicity, resume.2$quality, resume.2$equal)
resume.2 <- levels(resume.2$sex)
head(resume.2)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.2 = within(resume, {name = NULL})
head(resume.2)
resume.2 <- resume.2[,c(1:3,5:6,4)]
resume.2 <- levels(resume.2$sex)
head(resume.2)
bestglm(resume.2, family=binomial)
head(resume.2)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
resume.2 = within(resume, {name = NULL})
head(resume.2)
resume.2 <- resume.2[,c(1:3,5:6,4)]
head(resume.2)
bestglm(resume.2, family=binomial)
resume.2 <- if(resume.2$sex == "female", 1, 0)
resume.2 <- if(resume.2$sex == "female"
0,1)
resume.2 <- if(resume.2$sex == "female"
,0,1)
resume.2 <- ifelse(resume.2$sex == "female",0,1)
head(resume.2)
resume.2 <- elseif(resume.2$sex == "female",0,1)
resume.2 <- if(resume.2$sex == "female", 1,0
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv", stringsAsFactors = TRUE)
resume.2 = within(resume, {name = NULL})
head(resume.2)
resume.2 <- resume.2[,c(1:3,5:6,4)]
head(resume.2)
bestglm(resume.2, family=binomial)
head(resume.2)
bestglm(resume.2, family=binomial)
resume.2.bestglm <- bestglm(resume.2, family=binomial)
resume.2.bestglm$BestModels
employ.mod.2 = glm(call~factor(ethnicity)+experience+factor(ethnicity)*experience, data=resume.2, family=binomial)
summary(employ.mod.2)
plot(call~experience, resume)
plot(employ.mod)
hist(employ.mod$residuals)
plot(employ.mod)
employ.mod.q4 = glm(call~factor(ethnicity)+experience+factor(ethnicity)*experience, data=resume, family=binomial)
summary(employ.mod.q4)
anova(employ.mod.q4, test = "Chisq")
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B0
summary(employ.mod)
B0
B1 <- summary(employ.mod)$coeff[1,2]
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[1,2]
B1
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B1
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x =
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
P
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
P
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
P
Q = exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1)
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
P
Q = exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1)
Q
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
P
log(P/1-P)
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
P
Q = exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1)
Q
log(Q/1-Q)
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
P = exp(B0+(B1*x)+(B2*y)+(B3*z))
P
Q = exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1)
Q
log(P/1-Q)
log(P/1-P)
P
Q
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
Q = exp(B0+(B1*x)+(B2*y)+(B3*z))
Q
P = exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1)
P
log(P/1-P)
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
Q = exp(B0+(B1*x)+(B2*y)+(B3*z))
Q
P = exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1)
P
# African-American Sounding Name
a = 1
b = 0
c = a*b
O = exp(B0+(B1*a)+(B2*b)+(B3*c))
O
D = exp(B0+(B1*a)+(B2*b)+(B3*c))/(exp(B0+(B1*a)+(B2*b)+(B3*c))+1)
D
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
# Q = exp(B0+(B1*x)+(B2*y)+(B3*z))
# Q
P = exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1)
P
# African-American Sounding Name
a = 1
b = 0
c = a*b
# O = exp(B0+(B1*a)+(B2*b)+(B3*c))
# O
D = exp(B0+(B1*a)+(B2*b)+(B3*c))/(exp(B0+(B1*a)+(B2*b)+(B3*c))+1)
D
plot(call~experience, resume)
#Caucasian
abline(exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1), add = TRUE)
plot(call~experience, resume)
#Caucasian
abline(exp(B0+(B1*x)+(B2*x)+(B3*x))/(exp(B0+(B1*x)+(B2*x)+(B3*x))+1), add = TRUE)
plot(call~experience, resume)
#Caucasian
curve(exp(B0+(B1*x)+(B2*x)+(B3*x))/(exp(B0+(B1*x)+(B2*x)+(B3*x))+1), add = TRUE)
# African American
curve(exp(B0+(B1*x))/(exp(B0+(B1*x))+1), add = TRUE)
#Caucasian
rm(x)
plot(call~experience, resume)
#Caucasian
rm(x)
curve(exp(B0+(B1*x)+(B2*x)+(B3*x))/(exp(B0+(B1*x)+(B2*x)+(B3*x))+1), add = TRUE)
# African American
curve(exp(B0+(B1*x))/(exp(B0+(B1*x))+1), add = TRUE)
plot(call~experience, resume)
#Caucasian
curve(exp(B0+(B1*x)+(B2*x)+(B3*x))/(exp(B0+(B1*x)+(B2*x)+(B3*x))+1), add = TRUE)
# African American
curve(exp(B0+(B1*x))/(exp(B0+(B1*x))+1), add = TRUE)
plot(call~experience, resume)
#Caucasian
curve(exp(B0+(B1*x)+(B2*x)+(B3*x))/(exp(B0+(B1*x)+(B2*x)+(B3*x))+1), color = "red", add = TRUE)
# African American
curve(exp(B0+(B1*x))/(exp(B0+(B1*x))+1), color = "blue", add = TRUE)
plot(call~experience, resume)
#Caucasian
curve(exp(B0+(B1*x)+(B2*x)+(B3*x))/(exp(B0+(B1*x)+(B2*x)+(B3*x))+1), colour = "red", add = TRUE)
# African American
curve(exp(B0+(B1*x))/(exp(B0+(B1*x))+1), colour = "blue", add = TRUE)
plot(call~experience, resume)
#Caucasian
curve(exp(B0+(B1*x)+(B2*x)+(B3*x))/(exp(B0+(B1*x)+(B2*x)+(B3*x))+1), col = "red", add = TRUE)
# African American
curve(exp(B0+(B1*x))/(exp(B0+(B1*x))+1), col = "blue", add = TRUE)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv")
library(Stat2Data)
library(readr)
library(TTR)
library(bestglm)
library(leaps)
employ.mod = glm(call~factor(ethnicity)+equal+factor(ethnicity)*equal, data=resume, family=binomial)
summary(employ.mod)
anova(employ.mod, test = "Chisq")
summary(employ.mod)
B0 <- summary(employ.mod)$coeff[1,1]
B1 <- summary(employ.mod)$coeff[2,1]
B2 <- summary(employ.mod)$coeff[3,1]
B3 <- summary(employ.mod)$coeff[4,1]
# Caucasian-sounding name
x = 1
y = 1
z = x*y
# Q = exp(B0+(B1*x)+(B2*y)+(B3*z))
# Q
P = exp(B0+(B1*x)+(B2*y)+(B3*z))/(exp(B0+(B1*x)+(B2*y)+(B3*z))+1)
P
# African-American Sounding Name
a = 1
b = 0
c = a*b
# O = exp(B0+(B1*a)+(B2*b)+(B3*c))
# O
D = exp(B0+(B1*a)+(B2*b)+(B3*c))/(exp(B0+(B1*a)+(B2*b)+(B3*c))+1)
D
employ.mod.q4 = glm(call~factor(ethnicity)+experience+factor(ethnicity)*experience, data=resume, family=binomial)
summary(employ.mod.q4)
anova(employ.mod.q4, test = "Chisq")
plot(call~experience, resume)
#Caucasian
curve(exp(B0+(B1*x)+(B2*x)+(B3*x))/(exp(B0+(B1*x)+(B2*x)+(B3*x))+1), col = "red", add = TRUE)
# African American
curve(exp(B0+(B1*x))/(exp(B0+(B1*x))+1), col = "blue", add = TRUE)
resume <- read.csv("https://raw.githubusercontent.com/JA-McLean/STOR455/master/data/ResumeNames455.csv", stringsAsFactors = TRUE)
resume.2 = within(resume, {name = NULL})
head(resume.2)
resume.2 <- resume.2[,c(1:3,5:6,4)]
head(resume.2)
resume.2.bestglm <- bestglm(resume.2, family=binomial)
resume.2.bestglm$BestModels
employ.mod.2 = glm(call~factor(ethnicity)+experience+factor(ethnicity)*experience, data=resume.2, family=binomial)
summary(employ.mod.2)
