mod1
library(readr)
# This line will only run if the UsedCars.csv is stored in the same directory as this notebook!
UsedCars <- read_csv("UsedCars.csv")
# Delete the ** below and enter the two letter abbreviation for the state of your choice.
StateOfMyChoice = "TX"
# Creates a dataframe with the number of each model for sale in your state
Cars = as.data.frame(table(UsedCars$Model[UsedCars$State==StateOfMyChoice]))
# Renames the variables
names(Cars)[1] = "Model"
names(Cars)[2] = "Count"
# Restricts the data to only models with at least 100 for sale
# Before submitting, comment this out so that it doesn't print while knitting
Enough_Cars = subset(Cars, Count>=100)
Enough_Cars
# Delete the ** below and enter the model that you chose from the Enough_Cars data.
ModelOfMyChoice = "Accord"
# Takes a subset of your model car from your state
MyCars = subset(UsedCars, Model==ModelOfMyChoice & State==StateOfMyChoice)
# Check to make sure that the cars span at least 5 years.
range(MyCars$Year)
# Add a new variable for the age of the cars.
MyCars$Age = 2017 - MyCars$Year
mod1 <- lm(Price~Age, MyCars)
mod1
summary(lm(Price~Age, MyCars))
mod1
summary(lm(Price~Age, MyCars))
plot(Price~Age, MyCars)
abline(mod1)
plot(Price~Age, MyCars)
abline(mod1)
plot(mod1, 1:2)
hist(mod1$residuals)
MyCars$residual <- mod1$residuals
max(MyCars$residual)
x <- which.max(MyCars$residual)
MyCars[x,]
min(MyCars$residual)
y <- which.min(MyCars$residual)
MyCars[y,]
library(readr)
# This line will only run if the UsedCars.csv is stored in the same directory as this notebook!
UsedCars <- read_csv("UsedCars.csv")
# Delete the ** below and enter the two letter abbreviation for the state of your choice.
StateOfMyChoice = "TX"
# Creates a dataframe with the number of each model for sale in your state
Cars = as.data.frame(table(UsedCars$Model[UsedCars$State==StateOfMyChoice]))
# Renames the variables
names(Cars)[1] = "Model"
names(Cars)[2] = "Count"
# Restricts the data to only models with at least 100 for sale
# Before submitting, comment this out so that it doesn't print while knitting
Enough_Cars = subset(Cars, Count>=100)
Enough_Cars
# Delete the ** below and enter the model that you chose from the Enough_Cars data.
ModelOfMyChoice = "Accord"
# Takes a subset of your model car from your state
MyCars = subset(UsedCars, Model==ModelOfMyChoice & State==StateOfMyChoice)
# Check to make sure that the cars span at least 5 years.
range(MyCars$Year)
# Add a new variable for the age of the cars.
MyCars$Age = 2017 - MyCars$Year
mod1 <- lm(Price~Age, MyCars)
summary(lm(Price~Age, MyCars))
plot(Price~Age, MyCars)
abline(mod1)
plot(Price~Age, MyCars)
abline(mod1)
plot(mod1, 1:2)
hist(mod1$residuals)
max(MyCars$residual)
x <- which.max(MyCars$residual)
MyCars[x,]
min(MyCars$residual)
y <- which.min(MyCars$residual)
MyCars[y,]
mod1$residuals
max(mod1$residuals)
x <- which.max(mod1$residuals)
mod1[x,]
MyCars$residual <- mod1$residuals
max(MyCars$residual)
x <- which.max(MyCars$residual)
MyCars[x,]
min(MyCars$residual)
y <- which.min(MyCars$residual)
MyCars[y,]
MyCars$residuals
library(readr)
# This line will only run if the UsedCars.csv is stored in the same directory as this notebook!
UsedCars <- read_csv("UsedCars.csv")
# Delete the ** below and enter the two letter abbreviation for the state of your choice.
StateOfMyChoice = "TX"
# Creates a dataframe with the number of each model for sale in your state
Cars = as.data.frame(table(UsedCars$Model[UsedCars$State==StateOfMyChoice]))
# Renames the variables
names(Cars)[1] = "Model"
names(Cars)[2] = "Count"
# Restricts the data to only models with at least 100 for sale
# Before submitting, comment this out so that it doesn't print while knitting
Enough_Cars = subset(Cars, Count>=100)
Enough_Cars
# Delete the ** below and enter the model that you chose from the Enough_Cars data.
ModelOfMyChoice = "Accord"
# Takes a subset of your model car from your state
MyCars = subset(UsedCars, Model==ModelOfMyChoice & State==StateOfMyChoice)
# Check to make sure that the cars span at least 5 years.
range(MyCars$Year)
# Add a new variable for the age of the cars.
MyCars$Age = 2017 - MyCars$Year
mod1 <- lm(Price~Age, MyCars)
summary(lm(Price~Age, MyCars))
plot(Price~Age, MyCars)
abline(mod1)
plot(Price~Age, MyCars)
abline(mod1)
plot(mod1, 1:2)
hist(mod1$residuals)
MyCars$residuals <- mod1$residuals
max(MyCars$residuals)
x <- which.max(MyCars$residuals)
MyCars[x,]
min(MyCars$residuals)
y <- which.min(MyCars$residuals)
MyCars[y,]
rstudent(mod1)[x]
rstandard(mod1)[x]
MyCars$residuals
sort(MyCars$residuals)
sort(MyCars$residuals, decending = FALSE)
sort(MyCars$residuals, decreasing = FALSE)
sort(MyCars$residuals, decreasing = TRUE)
sort(MyCars$residuals, decreasing = TRUE)[1:10]
sort(MyCars$residuals, decreasing = TRUE)[1:10]
2*(2/nrow(MyCars))
nrow(MyCars)
2*(2/26)
3*(2/nrow(MyCars))
library(readr)
# This line will only run if the UsedCars.csv is stored in the same directory as this notebook!
UsedCars <- read_csv("UsedCars.csv")
# Delete the ** below and enter the two letter abbreviation for the state of your choice.
StateOfMyChoice = "TX"
# Creates a dataframe with the number of each model for sale in your state
Cars = as.data.frame(table(UsedCars$Model[UsedCars$State==StateOfMyChoice]))
# Renames the variables
names(Cars)[1] = "Model"
names(Cars)[2] = "Count"
# Restricts the data to only models with at least 100 for sale
# Before submitting, comment this out so that it doesn't print while knitting
Enough_Cars = subset(Cars, Count>=100)
Enough_Cars
# Delete the ** below and enter the model that you chose from the Enough_Cars data.
ModelOfMyChoice = "Accord"
# Takes a subset of your model car from your state
MyCars = subset(UsedCars, Model==ModelOfMyChoice & State==StateOfMyChoice)
# Check to make sure that the cars span at least 5 years.
range(MyCars$Year)
# Add a new variable for the age of the cars.
MyCars$Age = 2017 - MyCars$Year
mod1 <- lm(Price~Age, MyCars)
summary(lm(Price~Age, MyCars))
plot(Price~Age, MyCars)
abline(mod1)
plot(Price~Age, MyCars)
abline(mod1)
plot(mod1, 1:2)
hist(mod1$residuals)
MyCars$residuals
MyCars
MyCars$residuals <- mod1$residuals
max(MyCars$residuals)
x <- which.max(MyCars$residuals)
MyCars[x,]
min(MyCars$residuals)
y <- which.min(MyCars$residuals)
MyCars[y,]
rstudent(mod1)[x]
rstandard(mod1)[x]
sort(hatvalues(MyCars, decreases = T))
sort(hatvalues(MyCars$residuals, decreases = T))
sort(hatvalues(mod1, decreases = T))
count(hatvalues(mod1) > (2*(2/nrow(MyCars)))
count(hatvalues(mod1) > (2*(2/nrow(MyCars)))
tally(hatvalues(mod1) > (2*(2/nrow(MyCars)))
tally(hatvalues(mod1) > (2*(2/nrow(MyCars)))
hatvalues(mod1) > (2*(2/nrow(MyCars)))
table(hatvalues(mod1) > (2*(2/nrow(MyCars))))
sort(MyCars$residuals, decreasing = TRUE)[1:10]
2*(2/nrow(MyCars)) # Low Leverage
3*(2/nrow(MyCars)) # High Leverage
sort(hatvalues(mod1, decreases = T)) # High Leverage to low leverage; this is hi
# If hi > low leverage, it has low leverage
# If hi > high leverage, it has high leverage
table(hatvalues(mod1) > (2*(2/nrow(MyCars)))) #Low Leverage
table(hatvalues(mod1) > (3*(2/nrow(MyCars)))) #High Leverage
sort(MyCars$residuals, decreasing = TRUE)[1:10]
2*(2/nrow(MyCars)) # Low Leverage
3*(2/nrow(MyCars)) # High Leverage
# sort(hatvalues(mod1, decreases = T)) # High Leverage to low leverage; this is hi
# If hi > low leverage, it has low leverage
# If hi > high leverage, it has high leverage
table(hatvalues(mod1) > (2*(2/nrow(MyCars)))) #Low Leverage
table(hatvalues(mod1) > (3*(2/nrow(MyCars)))) #High Leverage
hatvalues(MyCars$residual, decreasing = TRUE)[1:10] > (2*(2/nrow(MyCars)))
hatvalues(MyCars$residuals, decreasing = TRUE)[1:10] > (2*(2/nrow(MyCars)))
sort(MyCars$residuals, decreasing = TRUE)[1:10]
cookmod1 <- cooks.distance(mod1)
library(readr)
# This line will only run if the UsedCars.csv is stored in the same directory as this notebook!
UsedCars <- read_csv("UsedCars.csv")
# Delete the ** below and enter the two letter abbreviation for the state of your choice.
StateOfMyChoice = "TX"
# Creates a dataframe with the number of each model for sale in your state
Cars = as.data.frame(table(UsedCars$Model[UsedCars$State==StateOfMyChoice]))
# Renames the variables
names(Cars)[1] = "Model"
names(Cars)[2] = "Count"
# Restricts the data to only models with at least 100 for sale
# Before submitting, comment this out so that it doesn't print while knitting
# Enough_Cars = subset(Cars, Count>=100)
# Enough_Cars
# Delete the ** below and enter the model that you chose from the Enough_Cars data.
ModelOfMyChoice = "Accord"
# Takes a subset of your model car from your state
MyCars = subset(UsedCars, Model==ModelOfMyChoice & State==StateOfMyChoice)
# Check to make sure that the cars span at least 5 years.
range(MyCars$Year)
# Add a new variable for the age of the cars.
MyCars$Age = 2017 - MyCars$Year
mod1 <- lm(Price~Age, MyCars)
summary(lm(Price~Age, MyCars))
plot(Price~Age, MyCars)
abline(mod1)
plot(Price~Age, MyCars)
abline(mod1)
plot(mod1, 1:2)
hist(mod1$residuals)
MyCars$residuals <- mod1$residuals
max(MyCars$residuals)
x <- which.max(MyCars$residuals)
MyCars[x,]
min(MyCars$residuals)
y <- which.min(MyCars$residuals)
MyCars[y,]
rstudent(mod1)[x]
rstandard(mod1)[x]
test <- sort(MyCars$residuals, decreasing = TRUE)[1:10]
test # Gives you the row numbers for the highest postive residuals
test2 <- sort(MyCars$residuals, decreasing = FALSE)[1:10]
test2 # Gives you the row numbers for the lowest negative residuals
test
test2
# mod1[[2]][c(1375,1377,620,594,1352, 1290, 683, 1294, 1282, 1374)]
# The above code just checks to make sure I'm calling the correct values
learning <- hatvalues(mod1)
chosen <- learning[c(1375,1377,620,594,1352, 1290, 683, 1294, 1282, 1374)]
lowlev <- 2*(2/nrow(MyCars)) # Low Leverage
highlev <- 3*(2/nrow(MyCars)) # High Leverage
# Low leverage
chosen > lowlev
chosen > highlev
cookmod1 <- cooks.distance(mod1)
cookmod1[c(1375,1377,620,594,1352, 1290, 683, 1294, 1282, 1374)]
cookmod1[c(1375,1377,620,594,1352, 1290, 683, 1294, 1282, 1374)] > 1
